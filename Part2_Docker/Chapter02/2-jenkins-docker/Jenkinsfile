def mainDir="Chapter02/2-jenkins-docker"
def ecrLoginHelper="docker-credential-ecr-login"
def region="<AWS Region>"
def ecrUrl="<AWS ECR URL>"
def repository="test"
def deployHost="<Deploy VM Private IP>"
// 위처럼 변수를 선언 할 수 있음. 신기방기 하구만.

pipeline {
    agent any

    stages {
        stage('Pull Codes from Github'){
            steps{
                //git에서 코드를 가져오는 거임.
                checkout scm
            }
        }
        stage('Build Codes by Gradle') {
            //gradle을 통해 코드를 빌드한다.
            steps {
                sh """
                cd ${mainDir}
                ./gradlew clean build
                """
            }
        }
        // AWS 및 Jib으로 진행한거임.
        // stage('Build Docker Image by Jib & Push to AWS ECR Repository') {
        //     steps {
        //         withAWS(region:"${region}", credentials:"aws-key") {
        //             ecrLogin()
        //             sh """
        //                 curl -O https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/0.4.0/linux-amd64/${ecrLoginHelper}
        //                 chmod +x ${ecrLoginHelper}
        //                 mv ${ecrLoginHelper} /usr/local/bin/
        //                 cd ${mainDir}
        //                 ./gradlew jib -Djib.to.image=${ecrUrl}/${repository}:${currentBuild.number} -Djib.console='plain'
        //             """
        //         }
        //     }
        // }
        // stage('Deploy to AWS EC2 VM'){
        //     steps{
        //         sshagent(credentials : ["deploy-key"]) {
        //             sh "ssh -o StrictHostKeyChecking=no ubuntu@${deployHost} \
        //              'aws ecr get-login-password --region ${region} | docker login --username AWS --password-stdin ${ecrUrl}/${repository}; \
        //               docker run -d -p 80:8080 -t ${ecrUrl}/${repository}:${currentBuild.number};'"
        //         }
        //     }
        // }
    }
}
